{
  "name": "Hashfile",
  "tagline": "calculate hash or checksum in many formats",
  "body": "hashfile\r\n=======\r\n\r\n`hashfile` calculates hashes or checksums in many formats, also verify them.\r\n\r\nDefault algorithm is `sha1`. This can be changed by passing argument `-a`/`--algorithm` to `hashfile`, or by calling `hashfile` with\r\nalgorithm name (ie. using symlinks).\r\n\r\n`hashfile` works pretty well with big files, because always read data partially, by default 4MB of data at once (it can be changed using\r\n`--max-input-read` param).\r\n\r\nExamples\r\n--------\r\n\r\n    # simplest call\r\n    % hashfile /etc/hosts\r\n    sha1: 4f53fb6efebddfdbe989f3bff980cd07ebcdc6bb /etc/hosts\r\n    \r\n    # specify algorithm\r\n    % hashfile -a md5 /etc/hosts\r\n    md5: 71e875e9d194c18567f48cf9534ed6cf /etc/hosts\r\n    \r\n    # one file, many algorithms\r\n    % hashfile -a md5 -a sha1 /etc/hosts /etc/hosts\r\n    md5: 71e875e9d194c18567f48cf9534ed6cf /etc/hosts\r\n    sha1: 4f53fb6efebddfdbe989f3bff980cd07ebcdc6bb /etc/hosts\r\n    \r\n    # many files, other algorithm for each one\r\n    % hashfile -a md5 -a sha1 /etc/hosts /etc/shells\r\n    md5: 71e875e9d194c18567f48cf9534ed6cf /etc/hosts\r\n    sha1: e0de09cb8797a4d39f89049d74585e815a3c6ceb /etc/shells\r\n    \r\n    # many files, one algorithm\r\n    % hashfile -a sha256 /etc/hosts /etc/shells\r\n    sha256: 48127a192d62fdcaa39f7cebd1ea5f3fe660807c8cd3a92599406d16bddc341a /etc/hosts\r\n    sha256: edfd1953cce18ab14449b657fcc01ece6a43a7075bab7b451f3186b885c20998 /etc/shells\r\n    \r\n    # choose algorithm using symlinks\r\n    % ln -s `which hashfile` ~/bin/sha256\r\n    % sha256 /etc/hosts\r\n    sha256: 48127a192d62fdcaa39f7cebd1ea5f3fe660807c8cd3a92599406d16bddc341a /etc/hosts\r\n    \r\n    # create verify file, and then verify\r\n    % hashfile -a sha256 README.* > check.sum\r\n    % hashfile -c check.sum\r\n    README.md: OK\r\n    README.rst: OK\r\n\r\nCurrent stable version\r\n----------------------\r\n\r\n2.1.0\r\n\r\nPython version\r\n--------------\r\n\r\n`hashfile` works with Python 2.7+ and 3.3+.\r\n\r\nUsage\r\n-----\r\n\r\nEverything is in help :) Just execute:\r\n\r\n    hashfile --help\r\n\r\nLook at result (remember: list of algorithms may vary on your system):\r\n\r\n    % hashfile --help\r\n    usage: hashfile [-h]\r\n                    [--algorithm {adler32,crc32,md4,md5,mdc2,ripemd160,sha,sha1,sha224,sha256,sha384,sha512,whirlpool}]\r\n                    [--generate-algo-symlinks] [--check] [--quiet] [--status]\r\n                    [--warn] [--max-input-read MAX_INPUT_READ]\r\n                    [FILE [FILE ...]]\r\n    \r\n    Calculate hash of some files\r\n    \r\n    positional arguments:\r\n      FILE                  list of files (stdin by default)\r\n    \r\n    optional arguments:\r\n      -h, --help            show this help message and exit\r\n      --algorithm {adler32,crc32,md4,md5,mdc2,ripemd160,sha,sha1,sha224,sha256,sha384,sha512,whirlpool}, -a {adler32,crc32,md4,md5,mdc2,ripemd160,sha,sha1,sha224,sha256,sha384,sha512,whirlpool}\r\n                            algorithm used to calculate hash If given more then\r\n                            one, then use different algorithms for different files\r\n                            (use first algo to first file, second algo to second\r\n                            file etc. If there is more files then algorithms, last\r\n                            algorithm from list is used.\r\n      --generate-algo-symlinks\r\n                            Show aliases for every algorithm handled by hashfile\r\n      --check, -c           read checksums from the FILEs and check them\r\n      --quiet, -q           don't print OK for each successfully verified file\r\n      --status, -s          don't output anything, status code shows success\r\n      --warn, -w            warn about improperly formatted checksum lines\r\n      --max-input-read MAX_INPUT_READ\r\n                            maximum data size for read at once\r\n    \r\n    Algorithm can be also set from program name (for example call program as sha1\r\n    to use sha1 algorithm)\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n1. Using PIP\r\n\r\n`hashfile` should work on any platform where [Python](http://python.org)\r\nis available, it means Linux, Windows, MacOS X etc. \r\n\r\nSimplest way is to use Python's built-in package system:\r\n\r\n    pip install hashfile\r\n\r\n2. Using [pipsi](https://github.com/mitsuhiko/pipsi)\r\n  \r\n    pipsi install hashfile\r\n  \r\n3. Using sources\r\n\r\nDownload sources from [Github](https://github.com/msztolcman/hashfile/archive/2.1.0.zip):\r\n\r\n    wget -O 2.1.0.zip https://github.com/msztolcman/hashfile/archive/2.1.0.zip\r\n    \r\nor\r\n\r\n    curl -o 2.1.0.zip https://github.com/msztolcman/hashfile/archive/2.1.0.zip\r\n\r\nUnpack:\r\n\r\n    unzip 2.1.0.zip\r\n\r\nAnd install\r\n\r\n    cd hashfile-2.1.0\r\n    python setup.py install\r\n\r\nVoila!\r\n\r\nAuthors\r\n-------\r\n\r\nMarcin Sztolcman <marcin@urzenia.net>\r\n\r\nContact\r\n-------\r\n\r\nIf you like or dislike this software, please do not hesitate to tell me about\r\nthis me via email (marcin@urzenia.net).\r\n\r\nIf you find bug or have an idea to enhance this tool, please use GitHub's\r\n[issues](https://github.com/msztolcman/hashfile/issues).\r\n\r\nLicense\r\n-------\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2012 Marcin Sztolcman\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nChangeLog\r\n---------\r\n\r\n### v2.0.0\r\n\r\n* added compatibility with tools like md5sum or sha1sum (verify mode,\r\n call arguments compatibility, etc) \r\n\r\n### v1.0.0\r\n\r\n* First public version\r\n",
  "google": "UA-207617-22",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}